generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model busquedas {
  id                Int       @id @default(autoincrement())
  usuario_id        Int?
  criterio_busqueda String
  fecha_busqueda    DateTime? @default(now()) @db.Timestamp(6)
  usuarios          usuarios? @relation(fields: [usuario_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model favoritos {
  id             Int          @id @default(autoincrement())
  usuario_id     Int?
  propiedad_id   Int?
  fecha_agregado DateTime?    @default(now()) @db.Timestamp(6)
  propiedades    propiedades? @relation(fields: [propiedad_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  usuarios       usuarios?    @relation(fields: [usuario_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model propiedades {
  id                    Int         @id @default(autoincrement())
  titulo                String      @db.VarChar(255)
  precio                Decimal     @db.Decimal(12, 2)
  zona                  String?     @db.VarChar(255)
  dormitorios           Int?
  banos                 Int?
  tipo_propiedad        String?     @db.VarChar(100)
  estado_propiedad      String?     @db.VarChar(50)
  estado_publicacion    String?     @db.VarChar(50)
  garajes               Int?
  es_departamento       Boolean?
  acepta_mascotas       Boolean?
  m2_edificados         Decimal?    @db.Decimal(10, 2)
  tiene_balcon          Boolean?
  es_casa               Boolean?
  m2_terreno            Decimal?    @db.Decimal(10, 2)
  plantas               Int?
  tiene_patio           Boolean?
  ubicacion_descripcion String?
  latitud               Decimal?    @db.Decimal(9, 6)
  longitud              Decimal?    @db.Decimal(9, 6)
  descripcion           String?
  comodidades           String?
  url                   String?
  fecha_entrada         DateTime?   @default(now()) @db.Timestamp(6)
  fecha_modificacion    DateTime?   @default(now()) @db.Timestamp(6)
  favoritos             favoritos[]
  currency              String?
  ciudad                String?
  image_url             String?
  trans_type            String?
}

model propiedades_scraping {
  id                    Int       @id @default(autoincrement())
  titulo                String    @db.VarChar(255)
  precio                Decimal   @db.Decimal(12, 2)
  zona                  String?   @db.VarChar(255)
  dormitorios           Int?
  banos                 Int?
  tipo_propiedad        String?   @db.VarChar(100)
  estado_propiedad      String?   @db.VarChar(50)
  estado_publicacion    String?   @db.VarChar(50)
  garajes               Int?
  es_departamento       Boolean?
  acepta_mascotas       Boolean?
  m2_edificados         Decimal?  @db.Decimal(10, 2)
  tiene_balcon          Boolean?
  es_casa               Boolean?
  m2_terreno            Decimal?  @db.Decimal(10, 2)
  plantas               Int?
  tiene_patio           Boolean?
  ubicacion_descripcion String?
  latitud               Decimal?  @db.Decimal(9, 6)
  longitud              Decimal?  @db.Decimal(9, 6)
  descripcion           String?
  comodidades           String?
  url                   String?
  fecha_entrada         DateTime? @default(now()) @db.Timestamp(6)
  fecha_scraping        DateTime? @default(now()) @db.Timestamp(6)
  currency              String?
  ciudad                String?
  image_url             String?
  trans_type            String?
}

model scraping_progreso {
  id           Int       @id @default(autoincrement())
  fuente       String    @db.VarChar(255)
  ultima_url   String?
  ultima_fecha DateTime? @default(now()) @db.Timestamp(6)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model suscripciones {
  id               Int       @id @default(autoincrement())
  usuario_id       Int?
  tipo_suscripcion String    @db.VarChar(50)
  fecha_inicio     DateTime? @default(now()) @db.Timestamp(6)
  fecha_fin        DateTime? @db.Timestamp(6)
  usuarios         usuarios? @relation(fields: [usuario_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  activo           Boolean?
  tipo_facturacion String?    @db.VarChar(50)
  monto            Decimal?  @db.Decimal(9, 6)
}

model usuarios {
  id             Int             @id @default(autoincrement())
  nombre         String
  email          String          @unique
  password_hash  String
  fecha_registro DateTime?       @default(now())
  busquedas      busquedas[]
  favoritos      favoritos[]
  suscripciones  suscripciones[]
  chats          chats[]
  fecha_nacimiento String?
  genero         String?
}


model chats {
  id         Int       @id @default(autoincrement())
  usuario_id Int?      // null si es an√≥nimo
  fecha      DateTime  @default(now())
  mensajes   mensajes[]
  usuarios   usuarios? @relation(fields: [usuario_id], references: [id], onDelete: Cascade)
}

model mensajes {
  id         Int          @id @default(autoincrement())
  chat_id    Int
  contenido  String
  tipo       MensajeTipo
  fecha      DateTime     @default(now())
  chats      chats        @relation(fields: [chat_id], references: [id], onDelete: Cascade)
}

enum MensajeTipo {
  usuario
  bot
}
